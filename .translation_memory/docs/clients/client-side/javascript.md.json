{
  "source_file_path_relative_to_docusaurus_root": "docs/clients/client-side/javascript.md",
  "source_file_content_hash": "f612d0fdd54b7d2595b758ee5bb53bc86155e373c645f624d2b4b0b9f7141e2a",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Flagsmith JavaScript SDK\nsidebar_label: JavaScript\ndescription: Manage your Feature Flags and Remote Config in your JavaScript applications.\nslug: /clients/javascript\n---",
      "source_content_hash": "3a3f0d2e1b0a72595fa71c0e2c12317e2e49aafedb3924fb6a7bc9ef637600bb",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_58cfcc64"
      }
    },
    {
      "segment_id": "3fbbcc07",
      "source_content": "This library can be used with pure JavaScript, React (and all other popular frameworks/libraries) and React Native\nprojects. The source code for the client is available on [Github](https://github.com/flagsmith/flagsmith-js-client).",
      "source_content_hash": "e8b4c25d1d808f4c954132d269e6b8153ac27d48667d7bad8d05780e14787aab",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "该库可应用于纯JavaScript、React（及所有主流框架/库）和React Native项目。客户端源代码托管于[Github](https://github.com/flagsmith/flagsmith-js-client)。"
      }
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "Example applications for a variety of JavaScript frameworks such as React, Vue and Angular, as well as React Native, can\nbe found here:",
      "source_content_hash": "eac6b90867dcbf8b75b2dc68d6d4e9ddf9afae48eb1e7d6f8b9255589e1c5f85",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "以下提供多种JavaScript框架的示例应用，包括React、Vue、Angular以及React Native："
      }
    },
    {
      "segment_id": "9e760345",
      "source_content": "- [Flagsmith Framework Examples](https://github.com/flagsmith/flagsmith-js-client/tree/main/examples)",
      "source_content_hash": "8d46971fe37d5fd4d08cbdb7043ecd4fb6cddc5cd21d7bc91d8eefa326d7faaa",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- [Flagsmith框架示例](https://github.com/flagsmith/flagsmith-js-client/tree/main/examples)"
      }
    },
    {
      "segment_id": "cbe57f9d",
      "source_content": "## Installation",
      "source_content_hash": "a15d12503bf00f654df068bd9e5af6259db1703ac04a61365b991ce52557e5ea",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 安装"
      }
    },
    {
      "segment_id": "d350c018",
      "source_content": "### NPM",
      "source_content_hash": "1df339bc436e1ca6250e69e63b2afee2a2bd90eb657e75485ba822efeca431c1",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### NPM"
      }
    },
    {
      "segment_id": "80e6256a",
      "source_content": ":::tip\n\nWe also have flagsmith-es if you'd prefer to use [ES](https://262.ecma-international.org/6.0/) modules.\n\n:::",
      "source_content_hash": "605ef3167e2ccef998a85c19f25a9779880f17c21088bc748d8acd01ba200bcc",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\n如需使用[ES](https://262.ecma-international.org/6.0/)模块，我们另提供flagsmith-es版本。\n\n:::"
      }
    },
    {
      "segment_id": "a89b882e",
      "source_content": "```bash\nnpm i flagsmith --save\n```",
      "source_content_hash": "16e310fdc2b4491c1ed2478ba658af0ad4534224a4e2238bb9686b5a8059eac0",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_a89b882e"
      }
    },
    {
      "segment_id": "d06306f7",
      "source_content": "### NPM for React Native",
      "source_content_hash": "16aef8d60f0733e714545c935e4b88a4eac37ba85b618bc522a52a773a474db7",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### React Native版NPM"
      }
    },
    {
      "segment_id": "0d170438",
      "source_content": ":::tip\n\nThe ReactNative SDK shares the exact same implementation of Flagsmith, however, the defaults for some underlying\nlibraries (e.g. AsyncStorage) use React Native compatible implementations.\n\n:::",
      "source_content_hash": "9f2a2d6eb0e37b81d0af34eb933f85bff61c000bbeea3b11a354c825842fbb29",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::tip\n\nReactNative SDK与Flagsmith核心实现完全一致，但其底层库（如AsyncStorage）默认采用React Native兼容方案。\n\n:::"
      }
    },
    {
      "segment_id": "de8f60af",
      "source_content": "```bash\nnpm i react-native-flagsmith --save\n```",
      "source_content_hash": "55f526d323acdfe1b9cfc8b0bc9c7b170fca1e36e01f4a08a6bbf7f4280efde7",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_de8f60af"
      }
    },
    {
      "segment_id": "06c0f776",
      "source_content": "### Via JavaScript CDN",
      "source_content_hash": "16c57d04552a4b9f980a97f4a70debfa9efaa75da7b2f10e8fd5f455b9ee224b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 通过JavaScript CDN"
      }
    },
    {
      "segment_id": "6648a219",
      "source_content": "```html\n<script src=\"https://cdn.jsdelivr.net/npm/flagsmith/index.js\"></script>\n```",
      "source_content_hash": "fe5f7eff855a390276fe04b841512282e7b6a63cd5a778368f366e23a36e6e1e",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_6648a219"
      }
    },
    {
      "segment_id": "6f930b2f",
      "source_content": "## Basic Usage",
      "source_content_hash": "2e1f823b8f972f8b6b6da0c66804fcea6cc6439142480a758b86f9fa649954e9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 基础用法"
      }
    },
    {
      "segment_id": "c504c207",
      "source_content": "The SDK is initialised against a single environment within a project on [https://flagsmith.com](https://flagsmith.com),\nfor example the Development or Production environment. You can find your Client-side Environment Key in the Environment\nsettings page.",
      "source_content_hash": "e29bab26bff233a506a8f5a22b3a0332bd313224a107f7601465a5bcb38c5f51",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "SDK需针对[https://flagsmith.com](https://flagsmith.com)项目中单个环境（如开发或生产环境）初始化。客户端环境密钥可在环境设置页面获取。"
      }
    },
    {
      "segment_id": "d3649a1e",
      "source_content": "![Image](/img/api-key.png)",
      "source_content_hash": "2f8c9c0b83b22f457d85301252648e4ee57be438573461d3e6a2d30e2b49a330",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![图片](/img/api-key.png)"
      }
    },
    {
      "segment_id": "e50bebbf",
      "source_content": "### Example: Initialising the SDK",
      "source_content_hash": "ce3c783a5ac8ffebb4ba2836419e713a23e79552444615e3f9ca72a0b9100215",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 示例：初始化SDK"
      }
    },
    {
      "segment_id": "6d254e09",
      "source_content": "```javascript\nimport flagsmith from 'flagsmith or react-native-flagsmith'; //Add this line if you're using flagsmith via npm\n\nflagsmith.init({\n environmentID: '<YOUR_CLIENT_SIDE_ENVIRONMENT_KEY>',\n // api:\"http://localhost:8000/api/v1/\" set this if you are self hosting, and point it to your API\n cacheFlags: true, // stores flags in localStorage cache\n enableAnalytics: true, // See https://docs.flagsmith.com/flag-analytics/ for more info\n onChange: (oldFlags, params) => {\n  //Occurs whenever flags are changed\n  const { isFromServer } = params; //determines if the update came from the server or local cached storage\n\n  //Check for a feature\n  if (flagsmith.hasFeature('my_cool_feature')) {\n   myCoolFeature();\n  }\n\n  //Or, use the value of a feature\n  const bannerSize = flagsmith.getValue('banner_size');\n\n  //Check whether value has changed\n  const bannerSizeOld = oldFlags['banner_size'] && oldFlags['banner_size'].value;\n  if (bannerSize !== bannerSizeOld) {\n   // Do something!\n  }\n },\n});\n```",
      "source_content_hash": "8f1206473053bf3c4fff5fa9f299e9b3b16d44e06106d966096342b4aba5e7cc",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_6d254e09"
      }
    },
    {
      "segment_id": "2e771fd0",
      "source_content": "### Providing Default Flags",
      "source_content_hash": "440b524e8cb1ffbdd1372e762db8134018929662c41f30139a0ae086db7633a7",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 设置默认功能开关"
      }
    },
    {
      "segment_id": "0750bfa1",
      "source_content": "You can define default flag values when initialising the SDK. This ensures that your application works as intended in\nthe event that it [cannot receive a response from our API](/guides-and-examples/defensive-coding).",
      "source_content_hash": "2972da6fbd8292818d6c4ecd19a8cff529d4e069827c2e768d81d98fda8650d4",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "初始化SDK时可定义默认开关值，确保在[无法获取API响应时](/guides-and-examples/defensive-coding)应用仍能按预期运行。"
      }
    },
    {
      "segment_id": "5782e280",
      "source_content": "```javascript\nimport flagsmith from 'flagsmith or react-native-flagsmith'; //Add this line if you're using flagsmith via npm\n\nflagsmith.init({\n    environmentID: '<YOUR_CLIENT_SIDE_ENVIRONMENT_KEY>',\n    defaultFlags: {\n        feature_a: { enabled: false},\n        font_size: { enabled: true, value: 12 },\n    }\n    onChange: (oldFlags, params) => {\n        ...\n    },\n});\n```",
      "source_content_hash": "9626681f7408171b23acca58370cc2cc42d8a3ab64c33587995e4578e1813168",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_5782e280"
      }
    },
    {
      "segment_id": "1f4b3b94",
      "source_content": "### Providing Default Flags as part of CI/CD",
      "source_content_hash": "d1721021c5ef5dfc4c821d3478de534f78caf3f1e122f87c954d93d6cdbe917c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 通过CI/CD设置默认开关"
      }
    },
    {
      "segment_id": "a81544fd",
      "source_content": "You can automatically set default flags for your frontend application in CI/CD by using our\n[CLI](https://github.com/Flagsmith/flagsmith-cli) in your build pipelines.",
      "source_content_hash": "baad4c4fa415f9b289cf18b7dd3995da051b33a7cdf55208b14e93b182ed9be1",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "可在构建流水线中使用[CLI工具](https://github.com/Flagsmith/flagsmith-cli)为前端应用自动配置默认开关。"
      }
    },
    {
      "segment_id": "6693c38c",
      "source_content": "The main steps to achieving this are as follows:",
      "source_content_hash": "67eb6b43b77d193603df4ec957d63acfc3f0de8b4e7629728a565c4c7e7281bd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "主要实施步骤："
      }
    },
    {
      "segment_id": "0422e2e2",
      "source_content": "1. Install the CLI `npm i flagsmith-cli --save-dev`\n2. Call the CLI as part of npm postinstall to create a `flagsmith.json` each time you run `npm install`. This can be\n   done by either:\n\n   - Using an environment variable `export FLAGSMITH_ENVIRONMENT=<YOUR_CLIENT_SIDE_ENVIRONMENT_KEY> flagsmith get`\n   - Manually specifying your environment key `flagsmith get <YOUR_CLIENT_SIDE_ENVIRONMENT_KEY>`.\n\n3. In your application, initialise Flagsmith with the resulting JSON, this will set default flags before attempting to\n   use local storage or call the API. `flagsmith.init({environmentID: json.environmentID, state:json})`",
      "source_content_hash": "95976266385512ee2d60e038f8276a1f61b0a302d241821eba9fa1d324e3b43f",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. 安装CLI `npm i flagsmith-cli --save-dev`\n2. 通过npm postinstall调用CLI生成`flagsmith.json`（每次执行`npm install`时触发）：\n   - 使用环境变量 `export FLAGSMITH_ENVIRONMENT=<您的客户端环境密钥> flagsmith get`\n   - 或手动指定环境密钥 `flagsmith get <您的客户端环境密钥>`\n3. 在应用中通过结果JSON初始化Flagsmith，将在调用API前优先加载默认开关：`flagsmith.init({environmentID: json.environmentID, state:json})`"
      }
    },
    {
      "segment_id": "b6152880",
      "source_content": "A working example of this can be found [here](https://github.com/Flagsmith/flagsmith-cli/tree/main/example). A list of\ncli commands can be found [here](https://github.com/Flagsmith/flagsmith-cli).",
      "source_content_hash": "a7ecac838b9fc39165f40c97a0180b242a6b64157de43c0a1b56a1a1a6ab8d85",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "完整示例参见[此处](https://github.com/Flagsmith/flagsmith-cli/tree/main/example)，CLI命令列表参阅[文档](https://github.com/Flagsmith/flagsmith-cli)。"
      }
    },
    {
      "segment_id": "36d6c3de",
      "source_content": "## Identifying users",
      "source_content_hash": "1d187bfc6e3a363da645672fb5a9e09ca5066da334aac5e4a454d749eb5b2410",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 用户识别"
      }
    },
    {
      "segment_id": "c364340c",
      "source_content": "Identifying users allows you to target specific users from the Flagsmith dashboard and configure features and traits.\nYou can call this before or after you initialise the project, calling it after will re-fetch features from the API.",
      "source_content_hash": "f81fc92be8b5d1c165c830d2e32f674f281715ad24f2a8dabd140e76ce748659",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "识别用户后可通过Flagsmith控制台定向配置功能开关和用户特征。此操作可在项目初始化前后调用，后续调用将重新从API获取特征。"
      }
    },
    {
      "segment_id": "9c9e2b64",
      "source_content": "You can identify the users as part of initialising the client or after with the function `flagsmith.identify`.",
      "source_content_hash": "ea91bd260f18b2970219e04982008fddaa88f083f863769cd323d43c6c99a454",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "可通过初始化时配置或后续调用`flagsmith.identify`函数实现用户识别。"
      }
    },
    {
      "segment_id": "5c7d994c",
      "source_content": "User features can be managed by navigating to users on [https://flagsmith.com](https://flagsmith.com) for your desired\nproject. ![Image](/img/user-features.png)",
      "source_content_hash": "791291956da44882cae1a9a1eba812e7108956dab739899521fa191b0dbb5a55",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "用户功能管理入口：[https://flagsmith.com](https://flagsmith.com)对应项目的用户模块。![图片](/img/user-features.png)"
      }
    },
    {
      "segment_id": "13292277",
      "source_content": "### Example: Identifying a user after initialising the client",
      "source_content_hash": "7d1325b482089c5f57b2fa34df01cb6cd0bec31c5dab623a1fd7939e93d72af4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 示例：初始化后识别用户"
      }
    },
    {
      "segment_id": "e478ec2c",
      "source_content": "When you initialise the client without an identity, it will fetch the flags for a given environment (unless you provide\n`preventFetch:true`).",
      "source_content_hash": "c4987985beb178cf05507bae8ed737ec558973437178353ca8cd1409265d30b8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "未指定用户身份初始化时，客户端将获取环境默认开关（除非设置`preventFetch:true`参数）。"
      }
    },
    {
      "segment_id": "8a061704",
      "source_content": "```javascript\nimport flagsmith from 'flagsmith';\n\nflagsmith.init({\n environmentID: '<YOUR_CLIENT_SIDE_ENVIRONMENT_KEY>',\n onChange: (oldFlags, params) => {\n  //Occurs whenever flags are changed\n\n  const { isFromServer } = params; //determines if the update came from the server or local cached storage\n\n  //Set a trait against the Identity\n  flagsmith.setTrait('favourite_colour', 'blue'); //This save the trait against the user, it can be queried with flagsmith.getTrait\n\n  //Check for a feature\n  if (flagsmith.hasFeature('my_power_user_feature')) {\n   myPowerUserFeature();\n  }\n\n  //Check for a trait\n  if (!flagsmith.getTrait('accepted_cookie_policy')) {\n   showCookiePolicy();\n  }\n\n  //Or, use the value of a feature\n  const myPowerUserFeature = flagsmith.getValue('my_power_user_feature');\n\n  //Check whether value has changed\n  const myPowerUserFeatureOld = oldFlags['my_power_user_feature'] && oldFlags['my_power_user_feature'].value;\n  if (myPowerUserFeature !== myPowerUserFeatureOld) {\n   // Do something!\n  }\n },\n});\n\n/*\nCan be called either after you're done initialising the project or in flagsmith.init with its identity and trait properties \nto prevent flags being fetched twice.\n*/\nflagsmith.identify('flagsmith_sample_user'); //This will create a user in the dashboard if they don't already exist\n```",
      "source_content_hash": "f608a10add693d28fd04204d74c78bd7f5c89f4f4c25ad5ef757c93551365a81",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_8a061704"
      }
    },
    {
      "segment_id": "1297ec42",
      "source_content": "### Example: Initialising the SDK with a user",
      "source_content_hash": "1d587004c18ba8ea842b89d2e924b116c271565b2aa60e72b5f2030dc802c67d",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 示例：初始化包含用户的SDK"
      }
    },
    {
      "segment_id": "c8a6ab3e",
      "source_content": "Initialising the client with an identity property will retrieve the user's flags instead of the environment defaults.\nYou can also specify traits at this point which could determine the flags that come back based on segment overrides.",
      "source_content_hash": "56f9151783f5f9081f66739f16c3ed06b38bc2b54088e9ba4a613809f8e2ca9f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "使用身份属性初始化客户端将获取该用户的特性标志，而非环境默认值。此时还可指定特征值，这些特征可能通过分段覆盖决定返回的标志。"
      }
    },
    {
      "segment_id": "bea1601a",
      "source_content": "```javascript\nimport flagsmith from 'flagsmith';\n\nflagsmith.init({\n environmentID: '<YOUR_CLIENT_SIDE_ENVIRONMENT_KEY>',\n identity: 'flagsmith_sample_user',\n traits: { age: 21, country: 'England' }, // these will add to the user's existing traits\n onChange: (oldFlags, params) => {\n  //Occurs whenever flags are changed\n\n  const { isFromServer } = params; //determines if the update came from the server or local cached storage\n\n  //Set a trait against the Identity\n  flagsmith.setTrait('favourite_colour', 'blue'); //This save the trait against the user, it can be queried with flagsmith.getTrait\n\n  //Check for a feature\n  if (flagsmith.hasFeature('my_power_user_feature')) {\n   myPowerUserFeature();\n  }\n\n  //Check for a trait\n  if (!flagsmith.getTrait('accepted_cookie_policy')) {\n   showCookiePolicy();\n  }\n\n  //Or, use the value of a feature\n  const myPowerUserFeature = flagsmith.getValue('my_power_user_feature');\n\n  //Check whether value has changed\n  const myPowerUserFeatureOld = oldFlags['my_power_user_feature'] && oldFlags['my_power_user_feature'].value;\n  if (myPowerUserFeature !== myPowerUserFeatureOld) {\n  }\n },\n});\n```",
      "source_content_hash": "cebe32e00abf13392d4476bcbb19faf2e94e1567d0d136007d89dccca6998eca",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_bea1601a"
      }
    },
    {
      "segment_id": "950e5c6c",
      "source_content": "## API Reference",
      "source_content_hash": "9ef018b6267c1dd5586ba9102e558efbee7657a0e4bf51fa059fb46092de9e89",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## API参考"
      }
    },
    {
      "segment_id": "49be422b",
      "source_content": "All function and property types can be seen\n[here](https://github.com/Flagsmith/flagsmith-js-client/blob/main/types.d.ts#L35).",
      "source_content_hash": "ef08926a108c5e11f1b49d898d838f75b8567651b91dca54aa8afd54ef7060bb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "所有函数及属性类型可查阅[此处](https://github.com/Flagsmith/flagsmith-js-client/blob/main/types.d.ts#L35)。"
      }
    },
    {
      "segment_id": "63daebc9",
      "source_content": "### Initialisation options",
      "source_content_hash": "4da919c1e1670c4a97d9e4209d409870305cddb5272fefa32abdb1ff59e660fa",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 初始化选项"
      }
    },
    {
      "segment_id": "415e0013",
      "source_content": "| Property                                                                       |                                                                                                              Description                                                                                                               | Required |                          Default Value |\n| ------------------------------------------------------------------------------ | :------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: | -------: | -------------------------------------: |\n| `environmentID: string`                                                        |                                                                     Defines which project environment you wish to get flags for. _example ACME Project - Staging._                                                                     |  **YES** |                                   null |\n| `onChange?: (previousFlags:IFlags, params:IRetrieveInfo)=> void`               |                                     Your callback function for when the flags are retrieved `(previousFlags,{isFromServer:true/false,flagsChanged: true/false, traitsChanged:true/false})=>{...}`                                      |  **YES** |                                   null |\n| `onError?: (res:{message:string}) => void`                                     |                                                                                    Callback function on failure to retrieve flags. `(error)=>{...}`                                                                                    |          |                                   null |\n| `asyncStorage?:any`                                                            | Needed for cacheFlags option, used to tell the library what implementation of AsyncStorage your app uses, i.e. ReactNative.AsyncStorage vs @react-native-community/async-storage, for web this defaults to an internal implementation. |          |                                   null |\n| `cacheFlags?: boolean`                                                         |                                      Any time flags are retrieved they will be cached, flags and identities will then be retrieved from local storage before hitting the API (see cache options)                                       |          |                                   null |\n| `cacheOptions?: {ttl?:number, skipAPI?:boolean}`                               |                                                     A ttl in ms (default to 0 which is infinite) and option to skip hitting the API in flagsmith.init if there's cache available.                                                      |          |                 {ttl:0, skipAPI:false} |\n| `enableAnalytics?: boolean`                                                    |                                                               [Enable sending flag analytics](/advanced-use/flag-analytics.md) for getValue and hasFeature evaluations.                                                                |          |                                  false |\n| `enableLogs?: boolean`                                                         |                                                                                                Enables logging for key Flagsmith events                                                                                                |          |                                   null |\n| `defaultFlags?: {flag_name: {enabled: boolean, value: string,number,boolean}}` |                                                                    Allows you define default features, these will all be overridden on first retrieval of features.                                                                    |          |                                   null |\n| `preventFetch?: boolean`                                                       |                                                                                     If you want to disable fetching flags and call getFlags later.                                                                                     |          |                                  false |\n| `state?: IState`                                                               |                                                                                   Set a predefined state, useful for SSR / isomorphic applications.                                                                                    |          |                                  false |\n| `api?: string`                                                                 |                                                                   Use this property to define where you're getting feature flags from, e.g. if you're self hosting.                                                                    |          | https://edge.api.flagsmith.com/api/v1/ |\n| `eventSourceUrl?: string`                                                      |                                                 Use this property to define where you're getting real-time flag update events (server sent events) from, e.g. if you're self hosting.                                                  |          | https://edge.api.flagsmith.com/api/v1/ |\n| `identity?: string`                                                            |                                                                           Specifying an identity will fetch flags for that identity in the initial API call.                                                                           |  **YES** |                                   null |\n| `traits?:Record<string, string or number or boolean>`                          |                                                                           Specifying traits will send the traits for that identity in the initial API call.                                                                            |  **YES** |                                   null |",
      "source_content_hash": "0457d81ffdb19499f0fa6815ee4bff6452ae7fd24cb12d11b37b2ec451afc1b0",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_415e0013"
      }
    },
    {
      "segment_id": "13095ea3",
      "source_content": "### Available Functions",
      "source_content_hash": "f0e295f4ed940b9d8fb3957a82c3a6253d38a1beb8740bed61b6a7fb84e0d876",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 可用函数"
      }
    },
    {
      "segment_id": "60648883",
      "source_content": "| Property                                                                                                                                        |                                                                                                                                Description                                                                                                                                |\n| ----------------------------------------------------------------------------------------------------------------------------------------------- | :-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------: |\n| <code>init(initialisationOptions)=> Promise&lt;void&gt;</code>                                                                                  |                                                                                                            Initialise the sdk against a particular environment                                                                                                            |\n| <code>hasFeature(key:string)=> boolean</code>                                                                                                   |                                                                                       Get the value of a particular feature e.g. `flagsmith.hasFeature(\"powerUserFeature\") // true`                                                                                       |\n| <code>getValue<T=string&#124;number&#124;boolean&#124;null>(key:string,{ json?:boolean, fallback?:T })=> string&#124;number&#124;boolean</code> |                                                  Get the value of a particular feature e.g. `flagsmith.getValue(\"font_size\", { fallback: 12 }) // 10`, specifying json:true will automatically parse the value as JSON.                                                   |\n| <code>getTrait(key:string)=> string&#124;number&#124;boolean</code>                                                                             |                                                               Once used with an identified user you can get the value of any trait that is set for them e.g. `flagsmith.getTrait(\"accepted_cookie_policy\")`                                                               |\n| <code>getAllTraits()=> Record&lt;string,string&#124;number&#124;boolean&gt;</code>                                                              |                                                                      Once used with an identified user you can get a key value pair of all traits that are set for them e.g. `flagsmith.getTraits()`                                                                      |\n| <code>getState()=>IState</code>                                                                                                                 |                                                                               Retrieves the current state of flagsmith, useful in NextJS / isomorphic applications. `flagsmith.getState()`                                                                                |\n| <code>setTrait(key:string, value:string&#124;number&#124;boolean)=> Promise&lt;IFlags&gt;</code>                                                |                                                              Once used with an identified user you can set the value of any trait relevant to them e.g. `flagsmith.setTrait(\"accepted_cookie_policy\", true)`                                                              |\n| <code>setTraits(values:Record<string, string&#124;number&#124;boolean>)=> Promise&lt;IFlags&gt;</code>                                          |                                                           Set multiple traits e.g. `flagsmith.setTraits({foo:\"bar\",numericProp:1,boolProp:true})`. Setting a value of null for a trait will remove that trait.                                                            |\n| <code>incrementTrait(key:string, value:number)=> Promise&lt;IFlags&gt;</code>                                                                   |                                                                                You can also increment/decrement a particular trait them e.g. `flagsmith.incrementTrait(\"click_count\", 1)`                                                                                 |\n| <code>startListening(ticks=1000:number)=>void</code>                                                                                            |                                                                                                               Poll the api for changes every x milliseconds                                                                                                               |\n| <code>stopListening()=>void</code>                                                                                                              |                                                                                                                           Stop polling the api                                                                                                                            |\n| <code>getFlags()=> Promise&lt;IFlags&gt;</code>                                                                                                 |                                                         Trigger a manual fetch of the environment features, if a user is identified it will fetch their features. Resolves a promise when the flags are updated.                                                          |\n| <code>identify(userId:string, traits?:Record<string, string or number or boolean>)=> Promise&lt;IFlags&gt;</code>                               | Identify as a user, optionally with traits e.g. `{foo:\"bar\",numericProp:1,boolProp:true}`. This will create a user for your environment in the dashboard if they don't exist, it will also trigger a call to `getFlags()`, resolves a promise when the flags are updated. |\n| <code>logout()=>Promise&lt;IFlags&gt;</code>                                                                                                    |                                                                                                   Stop identifying as a user, this will trigger a call to `getFlags()`                                                                                                    |",
      "source_content_hash": "52fd1e4de0482a79ce3b2c88025d2f0c5422ea0d7af67c162e4db4ac26adaad2",
      "node_type": "table",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_60648883"
      }
    },
    {
      "segment_id": "68dbdf68",
      "source_content": "## Multiple SDK Instances",
      "source_content_hash": "efd920392cb6ea66c771192bda9fa8ad83efc43e24035f68c6c57afed929572b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 多SDK实例"
      }
    },
    {
      "segment_id": "2cfc0629",
      "source_content": "[Version 1.5 and above](https://github.com/Flagsmith/flagsmith-js-client/releases/tag/1.5.0) allows you to create\nmultiple instances of the Flagsmith SDK. This may be used when you wish to identify multiple users simultaneously within\nyour app and retain access to getValue, hasFeature etc for each user.",
      "source_content_hash": "c766b59eb54d1cc6f1ac74dd70248771f9234e8b9c3fe6d70ca931a8e2401b8b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[1.5及以上版本](https://github.com/Flagsmith/flagsmith-js-client/releases/tag/1.5.0)支持创建多个Flagsmith SDK实例。此功能适用于需在应用中同时识别多个用户，并保留对各用户getValue、hasFeature等方法的调用权限的场景。"
      }
    },
    {
      "segment_id": "2d5a3f2f",
      "source_content": "Type:",
      "source_content_hash": "6cc5ad2e47e3be35ccb7d354da13ebb25073fd05ad5daa216141819484207f4f",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "类型："
      }
    },
    {
      "segment_id": "f5128628",
      "source_content": "```javascript\nexport function createFlagsmithInstance (): IFlagsmith\n```",
      "source_content_hash": "df796973e18c4adc48db1161dc8fce6f066a84a74df415fecadeb99f8f2a1793",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_f5128628"
      }
    },
    {
      "segment_id": "5014d30c",
      "source_content": "Usage:",
      "source_content_hash": "2bad3eeaf33caffe3bc9b482b4934ed19eb4ec3614c12373e1a5c5f8948217da",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "用法："
      }
    },
    {
      "segment_id": "a54efbd2",
      "source_content": "```javascript\nimport { createFlagsmithInstance } from 'flagsmith';\nconst flagsmith = createFlagsmithInstance();\nconst flagsmithB = createFlagsmithInstance();\n\n// now you can use flagsmith as before but in its own instance\n```",
      "source_content_hash": "22278d12a485b1324b27c77941124834e2dab06051b5614858d47786911b5cd6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_a54efbd2"
      }
    },
    {
      "segment_id": "e151b2af",
      "source_content": "## JSON Feature Values",
      "source_content_hash": "360cf876828f29524af25f6d7a437484bca71baa175a4cd2cf1aa8e9965b10c3",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## JSON特性值"
      }
    },
    {
      "segment_id": "850ec775",
      "source_content": "The Flagsmith JavaScript client supports JSON remote config / feature values. When calling `flagsmith.getValue`,\nspecifying `json:true` will attempt to parse the feature value as JSON, it will fallback to `fallback` failing to parse\nit.",
      "source_content_hash": "cb557e62fbd8a5068f646d8d6dd5101bf846ddcae5d77c3bdb72d64a60ddf50e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Flagsmith JavaScript客户端支持JSON格式的远程配置/特性值。调用`flagsmith.getValue`时指定`json:true`将尝试将特性值解析为JSON，若解析失败则回退至`fallback`值。"
      }
    },
    {
      "segment_id": "98fbc9ce",
      "source_content": "```javascript\nconst json = flagsmith.getValue('json_value', {\n json: true,\n fallback: { foo: null, bar: null },\n});\n```",
      "source_content_hash": "19cd2ac3c09383b02e21b2d47096257418ec8b8bc1b23c1dd68b2ec71fb87bbb",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_98fbc9ce"
      }
    },
    {
      "segment_id": "9cdf9229",
      "source_content": "## TypeScript Support",
      "source_content_hash": "1d4786b77ad1b09cf6b4531b4a89dee2c5236a94af050d35c7eaee8613c089b4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## TypeScript支持"
      }
    },
    {
      "segment_id": "5e0ab881",
      "source_content": "Flagsmith has full TypeScript support for its JavaScript clients, you can find our main type definition file\n[here](https://github.com/Flagsmith/flagsmith-js-client/blob/main/types.d.ts#L35). You can also enforce type safety of\nfeature and trait names using generics:",
      "source_content_hash": "96873231ab216bf884ba05f5b1a9dd9b51b24ced9a4f8c82e8d8ebfe1ce246aa",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Flagsmith为JavaScript客户端提供完整的TypeScript支持，主类型定义文件参见[此处](https://github.com/Flagsmith/flagsmith-js-client/blob/main/types.d.ts#L35)。还可通过泛型强制约束特性名与特征名的类型安全："
      }
    },
    {
      "segment_id": "95b3e282",
      "source_content": "Given that we type our flags and traits:",
      "source_content_hash": "4a23fce011b7a78f98a6095d0bdc9f90fbf1f678ae95d7e0c6891394b9258244",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "给定已类型化的标志和特征："
      }
    },
    {
      "segment_id": "97766080",
      "source_content": "```typescript\ntype FlagOptions = 'font_size' | 'hero';\ntype TraitOptions = 'example_trait';\n```",
      "source_content_hash": "cef945678730f50e133f68b24cb01756c44dbef7fec5b93d8066515b26129147",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_97766080"
      }
    },
    {
      "segment_id": "b16b56a2",
      "source_content": "We can now enforce these types:",
      "source_content_hash": "8383b607029aa0e2033693b4bfb1e1e5aeaccb21e4771a3d9fb81be69a0d53b2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "现可强制实施这些类型："
      }
    },
    {
      "segment_id": "9a01bde3",
      "source_content": "```typescript\n// enforces you passing the correct key to flagsmith.getValue(flag:FlagOptions), flagsmith.getTrait(trait:TraitOptions)\nimport flagsmith from 'flagsmith';\nconst typedFlagsmith = flagsmith as IFlagsmith<FlagOptions, TraitOptions>;\n\n// Similarly for the useFlagsmith hook is typed with useFlagsmith(flags:FlagOptions[],traits:TraitOptions[])\nconst flagsmith = useFlagsmith<FlagOptions, TraitOptions>(); // enforces flagsmith.getValue()\n\n// for useFlags this will ensure you only can pass correct keys also\nconst flags = useFlags<FlagOptions, TraitOptions>(['font_size'], ['example_trait']);\n\n// for getting JSON values this will type the return\nconst json = flagsmith.getValue<{ foo: string | null; bar: string | null }>('json_value', {\n json: true,\n fallback: { foo: null, bar: null },\n});\nconsole.log(json.foo); // typed as {foo: string|null, bar: string|null}\n\n// If a type is not specified for getValue it will asume it from the type of fallback. In this case, a number.\nconst font_size = flagsmith.getValue('font_size', { fallback: 12 });\n```",
      "source_content_hash": "08ae0163264ac9a2c09a5579adf0008918c84d8a33757add4af546f5fb163b3a",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_9a01bde3"
      }
    },
    {
      "segment_id": "7ee8342f",
      "source_content": "## Datadog RUM JavaScript SDK Integration",
      "source_content_hash": "a73828219310d1c322a206e05510c661560da770f638f89ed047f2ab4e9cdf4f",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Datadog RUM JavaScript SDK集成"
      }
    },
    {
      "segment_id": "855b4859",
      "source_content": ":::caution\n\nThis feature is still in beta with Datadog. Contact your Datadog representative before enabling the integration below.\n\n:::",
      "source_content_hash": "11363ad9f38df8b5c10cdf880340bb0469537121cdb428792998eb8d08750290",
      "node_type": "containerDirective",
      "translatable": true,
      "translations": {
        "zh-CN": ":::caution\n\n此功能在Datadog中仍处于测试阶段。启用下方集成前请先联系Datadog代表。\n\n:::"
      }
    },
    {
      "segment_id": "dbd18971",
      "source_content": "The Flagsmith JavaScript SDK can be configured so that feature enabled state and remote config can be stored as\n[Datadog RUM feature flags](https://docs.datadoghq.com/real_user_monitoring/guide/setup-feature-flag-data-collection/?tab=npm#analyze-your-feature-flag-performance-in-rum)\nand user traits can be stored as\n[Datadog user session properties](https://docs.datadoghq.com/real_user_monitoring/browser/modifying_data_and_context/?tab=npm#addoverride-user-session-property).\nThe integration requires an initialised Datadog `datadogRum` client.",
      "source_content_hash": "0f525dc16b31fc64a824cdf29ff65bdf1c6d34fbad1ada4f48a1af4d9e6a75fc",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Flagsmith JavaScript SDK可配置为：将特性启用状态和远程配置存储为[Datadog RUM特性标志](https://docs.datadoghq.com/real_user_monitoring/guide/setup-feature-flag-data-collection/?tab=npm#analyze-your-feature-flag-performance-in-rum)，用户特征存储为[Datadog用户会话属性](https://docs.datadoghq.com/real_user_monitoring/browser/modifying_data_and_context/?tab=npm#addoverride-user-session-property)。该集成需要已初始化的Datadog `datadogRum`客户端。"
      }
    },
    {
      "segment_id": "7020a57c",
      "source_content": "### Step 1: Initialise your Datadog RUM SDK with the feature_flags experimental feature",
      "source_content_hash": "0f869fc6d4afb4a089a55b8c9853563c6f4a8a7650a3315e7c6eb73c81cf0de4",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 步骤1：使用feature_flags实验特性初始化Datadog RUM SDK"
      }
    },
    {
      "segment_id": "d58af824",
      "source_content": "To start collecting feature flag data, initialize the Datadog RUM SDK and configure the enableExperimentalFeatures\ninitialization parameter with [\"feature_flags\"].",
      "source_content_hash": "30a7cf528280abffe402fe9ff3d11cc752900b5e720672bcbf237256fca22732",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "要开始收集特性标志数据，需初始化Datadog RUM SDK并在初始化参数enableExperimentalFeatures中配置[\"feature_flags\"]。"
      }
    },
    {
      "segment_id": "4c0c56cd",
      "source_content": "```typescript\nimport { datadogRum } from '@datadog/browser-rum';\n\n// Initialize Datadog Browser SDK\ndatadogRum.init({\n    enableExperimentalFeatures: [\"feature_flags\"],\n    ...\n});\n```",
      "source_content_hash": "d050b6bc849ce26d9a4fbc249d44ef899fab41eeba3e8b33e59be31f385fc290",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_4c0c56cd"
      }
    },
    {
      "segment_id": "7bd550b1",
      "source_content": "### Step 2: Initialise the Flagsmith SDK with configuring",
      "source_content_hash": "614df1073bc5cb592d2ff767454ac5d0cd3cbb1c2a16db20c76dd03554c10db0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 步骤2：通过配置初始化Flagsmith SDK"
      }
    },
    {
      "segment_id": "423bbb1a",
      "source_content": "Initialise the Flagsmith SDK with the datadogRum option. Optionally, you can configure the client so that Flagsmith\ntraits are sent to Datadog via ``datadogRum.setUser()````.",
      "source_content_hash": "701515a50a655d32ada92d4e03ba730415888b09324e9c21fba6cab9f79bf6e6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "使用datadogRum选项初始化Flagsmith SDK。可选配置客户端将Flagsmith特征通过``datadogRum.setUser()``发送至Datadog。"
      }
    },
    {
      "segment_id": "ccc51bd3",
      "source_content": "```typescript\nimport { datadogRum } from '@datadog/browser-rum';\n...\n// Initialize the Flagsmith SDK\nflagsmith.init({\n    datadogRum: {\n        client: datadogRum,\n        trackTraits: true,\n    },\n    ...\n})\n```",
      "source_content_hash": "2c6ab1ebf976da5ce5284cb134deae7710a256288619a7d94ef43f7514cf53a1",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_ccc51bd3"
      }
    },
    {
      "segment_id": "99b95415",
      "source_content": "### Step 3: What happens next",
      "source_content_hash": "1e7362247772ab567926eebe298ac89c832e464d3816e91479a26b668a8261d9",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 步骤3：后续流程"
      }
    },
    {
      "segment_id": "84c2bceb",
      "source_content": "- Whenever flag values are _evaluated_ in your code, they will be sent to Datadog as user events.\n- If the option to send Traits is enabled, the Trait key/value pairs will be sent to Datadog when the SDK receives its\n  Flags.",
      "source_content_hash": "596d7170dd48512b46b629dc2648ea939776fe6c843f5fb73c53e3998743c32d",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 当代码中_评估_标志值时，这些值会作为用户事件发送至Datadog\n- 若启用发送特征选项，SDK获取标志时会将特征键值对发送至Datadog"
      }
    },
    {
      "segment_id": "77f0732d",
      "source_content": "This will track remote config and feature enabled states as feature flags in the following format",
      "source_content_hash": "5d50750a8b60d48361fbd7d2844f604a154b30361ca316685639b55440934183",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "该功能会以如下格式将远程配置和特性启用状态作为特性标志进行追踪"
      }
    },
    {
      "segment_id": "b96a7fc8",
      "source_content": "```bash\nflagsmith_value_<FEATURE_NAME> // remote config\nflagsmith_enabled_<FEATURE_NAME> // enabled state\n```",
      "source_content_hash": "11f5403d6014a95761d1689c6d0c7603bd4c504bf499fe8f5c70c9c232d6b4e6",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_b96a7fc8"
      }
    },
    {
      "segment_id": "a290533e",
      "source_content": "Additionally, the integration will also store Flagsmith traits against the Datadog user in the following format:",
      "source_content_hash": "660ada509eb29ed7f12a8bb55082d3b9177417985abb12b5abf5c5dca1b9a2cd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "此外，该集成还会以如下格式将Flagsmith用户特征存储至Datadog用户会话中："
      }
    },
    {
      "segment_id": "eeb25400",
      "source_content": "```bash\nflagsmith_trait_<FEATURE_NAME> // remote config\n```",
      "source_content_hash": "b66724a65e594fa8b83be48bad33695d4a8bf572cca8c232c4e98a0e4b5e0ddc",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_eeb25400"
      }
    },
    {
      "segment_id": "b0e8431f",
      "source_content": "You can find an example of this integration\n[here](https://github.com/Flagsmith/flagsmith-js-client/blob/main/examples/datadog-realtime-user-monitoring/src/index.tsx).",
      "source_content_hash": "e17bb4ac2e707161899e6e27cc48f4496a14a0beae6e698f52dd4505fea93493",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "集成示例可参见\n[此处](https://github.com/Flagsmith/flagsmith-js-client/blob/main/examples/datadog-realtime-user-monitoring/src/index.tsx)。"
      }
    },
    {
      "segment_id": "72965517",
      "source_content": "## Dynatrace JavaScript SDK Integration",
      "source_content_hash": "edfca13a0a465f25cb2ba7da2eca2129683e3522bed6ff6176ca4789d9fac87c",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## Dynatrace JavaScript SDK集成"
      }
    },
    {
      "segment_id": "ce99c217",
      "source_content": "The Flagsmith JavaScript SDK can be configured so that feature enabled state, remote config and user traits can be\nstored as Dynatrace session properties. The integration requires a configured Dynatrace `dtrum` object that is already\nset up.",
      "source_content_hash": "0e1c459f6ea8956dc501ec5f5e107c49cd29bf5938f2e5de9d274afaf3fe8eeb",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Flagsmith JavaScript SDK可配置为将功能开关状态、远程配置值及用户特征存储为Dynatrace会话属性。该集成要求预先配置好Dynatrace的`dtrum`对象。"
      }
    },
    {
      "segment_id": "7083d194",
      "source_content": "### Step 1: Pass `enableDynatrace` into `flagsmith.init()`",
      "source_content_hash": "0b4b8fc23e4ae7c8cad6fc98d4f9de4a5bafe6c036dfb8a87a985dc5e031ce1e",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 步骤1：在`flagsmith.init()`中传入`enableDynatrace`"
      }
    },
    {
      "segment_id": "7a210168",
      "source_content": "In order to configure the JavaScript SDK, you need to pass in an instance of\n[dtrum](https://www.dynatrace.com/support/help/how-to-use-dynatrace/real-user-monitoring/basic-concepts/js-tag-api).",
      "source_content_hash": "403c941cb6d045cc17aad104a2a6bb53999d1df94be46dd68565fe53f1525c08",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "配置SDK时需传入已初始化的\n[dtrum实例](https://www.dynatrace.com/support/help/how-to-use-dynatrace/real-user-monitoring/basic-concepts/js-tag-api)。"
      }
    },
    {
      "segment_id": "86df7636",
      "source_content": "```javascript\n// Initialize the Flagsmith SDK\nflagsmith.init({\n //...Initialisation properties,\n enableDynatrace: true,\n});\n```",
      "source_content_hash": "80850c968a19f5b572f9d4c5faa1e7a81c08fcee0e3803efb6477d1160e4506b",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_86df7636"
      }
    },
    {
      "segment_id": "7e0b49a3",
      "source_content": "When setting `enableDynatrace` to true `flagsmith.init`, Flagsmith will send session properties corresponding to flag\nenabled state, flag values and user traits via\n[dtrum.sendSessionProperties()](https://www.dynatrace.com/support/doc/javascriptapi/interfaces/dtrum_types.DtrumApi.html#sendSessionProperties)",
      "source_content_hash": "63acdad46ae1ed306867ff70fd91c34e68a02d2403ef31f4f5f0307bd4c25420",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "当`flagsmith.init`中设置`enableDynatrace`为true时，Flagsmith将通过\n[dtrum.sendSessionProperties()](https://www.dynatrace.com/support/doc/javascriptapi/interfaces/dtrum_types.DtrumApi.html#sendSessionProperties)\n发送以下会话属性："
      }
    },
    {
      "segment_id": "f3235927",
      "source_content": "- flag enabled state sends as a **shortString** as `true` or `false` with the prefix `flagsmith_enabled_`\n  - example: `flagsmith_enabled_hero: \"true\"`\n- Remote config values sends as value with the prefix flagsmith _value_, this value will be a **javaDouble** for numeric\n  values and a **shortString** for any other.\n  - example: `flagsmith_value_font_size: 21`, `flagsmith_value_hero_colour: \"blue\"`\n- Remote config values sends as value with the prefix flagsmith _value_, this value will be a **javaDouble** for numeric\n  values and a **shortString** for any other.\n  - example: `flagsmith_trait_age: 21`, `flagsmith_trait_favourite_colour: \"blue\"`",
      "source_content_hash": "af5934838cecc70e9003955c246811725145a6423e9c2899f56c7111e3bfe77b",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- 功能开关状态以**shortString**类型发送，前缀为`flagsmith_enabled_`\n  - 示例：`flagsmith_enabled_hero: \"true\"`\n- 远程配置值以`flagsmith_value_`为前缀，数值类型为**javaDouble**，其他类型为**shortString**\n  - 示例：`flagsmith_value_font_size: 21`, `flagsmith_value_hero_colour: \"blue\"`\n- 用户特征以`flagsmith_trait_`为前缀，数值类型为**javaDouble**，其他类型为**shortString**\n  - 示例：`flagsmith_trait_age: 21`, `flagsmith_trait_favourite_colour: \"blue\"`"
      }
    },
    {
      "segment_id": "394d8574",
      "source_content": "### Step 2: Add the session properties to your Dynatrace application settings",
      "source_content_hash": "6bbbfe7aaa26d9dda2108cc0cbc2fc46f19c13a188b4e32b2828269eca8b946a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### 步骤2：在Dynatrace应用设置中添加会话属性"
      }
    },
    {
      "segment_id": "13c7706c",
      "source_content": "[As with any other Dynatrace session properties](https://www.dynatrace.com/support/help/how-to-use-dynatrace/real-user-monitoring/setup-and-configuration/web-applications/additional-configuration/define-user-action-and-session-properties),\nyou need to also define session properties within the RUM application settings.",
      "source_content_hash": "4b1efc70897b8748504c3d6e3fe26563c73f0ccf8bb168b2fcfe899d13a653e5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "[与其他Dynatrace会话属性类似](https://www.dynatrace.com/support/help/how-to-use-dynatrace/real-user-monitoring/setup-and-configuration/web-applications/additional-configuration/define-user-action-and-session-properties)，需在RUM应用设置中定义这些属性。"
      }
    },
    {
      "segment_id": "1230856c",
      "source_content": "You can also add these properties via the\n[Dynatrace API](https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/rum/mobile-custom-app-configuration/user-action-and-session-properties/post-property).",
      "source_content_hash": "0f165e03a98e849309d4933966a00364bfab971719c2c5d876fbbeb845583736",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "也可通过\n[Dynatrace API](https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/rum/mobile-custom-app-configuration/user-action-and-session-properties/post-property)\n添加这些属性。"
      }
    },
    {
      "segment_id": "573762e8",
      "source_content": "### Dynatrace Screenshots",
      "source_content_hash": "9452ecd1ccdc1532ff0df06a3cbebfc9e8396095a076b2976b6ea755d96f5448",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "### Dynatrace配置截图"
      }
    },
    {
      "segment_id": "ec3c0760",
      "source_content": "Defining Dynatrace Properties:",
      "source_content_hash": "73421fcf7d86cebc64ca80f8b23f5524f99eb5385b8493fa03a4a28f85be998a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "定义Dynatrace属性："
      }
    },
    {
      "segment_id": "69d6e4be",
      "source_content": "![Image](/img/dynatrace_1.png)",
      "source_content_hash": "4428a83eb990451e125b5c7068d2922750ad46a20adb53f96fcaebaff74530dd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![图片](/img/dynatrace_1.png)"
      }
    },
    {
      "segment_id": "5e15188a",
      "source_content": "Defining a Flagsmith and Dynatrace Property:",
      "source_content_hash": "cb9848aa1e5aa26ddb83a1b0d21f9b3afbfc1a5f72452f4a8af72302b446fc7a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "定义Flagsmith与Dynatrace属性："
      }
    },
    {
      "segment_id": "db871df4",
      "source_content": "![Image](/img/dynatrace_2.png)",
      "source_content_hash": "72102a2b7ca8918fe3926a750a253a51bb0ba2597ef42e141ed5aa719189605a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![图片](/img/dynatrace_2.png)"
      }
    },
    {
      "segment_id": "04bb83ba",
      "source_content": "Filtering on a Flagsmith Flag:",
      "source_content_hash": "77fc3b526044063d5045cbedf5dacf01276d3a70c998edbd17aecae2e8649bf5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "按Flagsmith功能开关筛选："
      }
    },
    {
      "segment_id": "9bc9e142",
      "source_content": "![Image](/img/dynatrace_3.png)",
      "source_content_hash": "541db370805bcd017e412bf49b82acf5671913c9c948373347e62ba212ba2bef",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "![图片](/img/dynatrace_3.png)"
      }
    },
    {
      "segment_id": "13236400",
      "source_content": "## FAQs",
      "source_content_hash": "3bd810b3b5e6d0ff5d76e1b6274203676713250cc2873a02e39284054734cd17",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-CN": "## 常见问题"
      }
    },
    {
      "segment_id": "4dd62f5c",
      "source_content": "**How do I call `identify`, `setTraits` etc alongside `init`?**",
      "source_content_hash": "382a8d30357a0b0240fd5c0b1d2fbe0118ac8a7d9c921a65293c8c48fbfc07fd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**如何同时调用`identify`、`setTraits`和`init`？**"
      }
    },
    {
      "segment_id": "53d85bf8",
      "source_content": "- `init` should be called once in your application, we recommend you call `init` before any other flagsmith call.\n- `init` retrieves flags by default, you can turn this off with the `preventFetch` option to `init`. This is useful for\n  when you know you're identifying a user straight after.",
      "source_content_hash": "1b2a13552fb499d23e3b5412f4f45fccffede7a445d4f404aea444d858bae645",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- `init`应在应用中仅调用一次，建议在所有flagsmith操作前调用\n- `init`默认会获取功能开关，可通过`preventFetch`参数禁用（适用于后续立即执行用户身份识别的情况）"
      }
    },
    {
      "segment_id": "3353b597",
      "source_content": "**When does onChange callback?**",
      "source_content_hash": "9a69f3d9529e00d9dee1164234551a64f416306da746bf64ea51c8e1bfdb9ace",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**何时触发onChange回调？**"
      }
    },
    {
      "segment_id": "0b7b2b74",
      "source_content": "`onChange` calls when flags are fetched this can be a result of:",
      "source_content_hash": "65bb33b90dd70cd33db75adad05b05dba698e812b7ae5bece538ea3a55311b73",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`onChange`在以下场景触发功能开关获取时调用："
      }
    },
    {
      "segment_id": "e1ac9a72",
      "source_content": "- init\n- setTrait\n- incrementTrait\n- getFlags\n- identify\n- flags evaluated by local storage",
      "source_content_hash": "33a2de6cbe69ddc040e43ea9271a3fd52a622999f141cdc7d71f8f03a6731010",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "- init初始化\n- setTrait设置特征\n- incrementTrait递增特征\n- getFlags获取开关\n- identify身份识别\n- 通过本地存储评估开关"
      }
    },
    {
      "segment_id": "52907304",
      "source_content": "Using onChange is best used in combination with your application's state management e.g. onChange triggering an action\nto re-evaluate flags with `hasFeature` and `getValue`.",
      "source_content_hash": "555a7fe636374304c057c69e1c1a64bc6521647e561e62f15b0ffcd16cbf6224",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "最佳实践是将`onChange`与应用程序的状态管理结合使用，例如通过`onChange`触发一个动作，利用`hasFeature`和`getValue`重新评估功能开关状态。"
      }
    },
    {
      "segment_id": "6d93952b",
      "source_content": "However, if this does not fit in with your development pattern, all the above flagsmith functions return a promise that\nresolves when fresh flags have been retrieved.",
      "source_content_hash": "fb4d51e5e229aa31d1e5334927126d1d075777b8bcc62dd7b368499a3e0f0a16",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "但如果这与您的开发模式不匹配，上述所有Flagsmith函数均会返回一个Promise，该Promise会在获取到最新功能开关状态时解析。"
      }
    },
    {
      "segment_id": "4ddcc352",
      "source_content": "For example by doing the following:",
      "source_content_hash": "29835118547d4c767c6c527f5b2cb656f64e06e7796afc7095bdaf08b273c613",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "例如执行以下操作："
      }
    },
    {
      "segment_id": "625b463b",
      "source_content": "```javascript\nawait flagsmith.setTrait('age', 21);\nconst hasFeature = flagsmith.hasFeature('my_feature');\n```",
      "source_content_hash": "2242402ca62e2e9bd906f178d0684cae862cb30daaf4dac61cadfd0d38ab070c",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_625b463b"
      }
    },
    {
      "segment_id": "13ccbdec",
      "source_content": "On change calls back with information telling you what has changed, you can use this to prevent any unnecessary\nre-renders.",
      "source_content_hash": "b73d58eac33cef54044130967679ad64c5028692c6f74af172e30a237442f083",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "`onChange`回调时会携带变更信息，您可利用此机制避免不必要的重新渲染。"
      }
    },
    {
      "segment_id": "33b5505f",
      "source_content": "```javascript\nonChange(this.oldFlags, {\n isFromServer: true, // flags have come from the server or local storage\n flagsChanged: deepEqualsCheck(oldFlags, newFlags),\n traitsChanged: deepEqualsCheck(oldFlags, newFlags),\n});\n```",
      "source_content_hash": "52ded0fc4d7cef2b1239f60e27fb6adcc9c755fc96b114e9845bb63f587a5af1",
      "node_type": "code",
      "translatable": false,
      "translations": {
        "zh-CN": "@@untranslatable_placeholder_33b5505f"
      }
    },
    {
      "segment_id": "698d0e82",
      "source_content": "**How does caching flags work?**",
      "source_content_hash": "a9ff35bc7170c210bca212cc5951236109f8bc4f97ef7070a781303af284667c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**功能开关缓存如何工作？**"
      }
    },
    {
      "segment_id": "fa770099",
      "source_content": "If the `cacheFlags` is set to true on `init`, the SDK will cache flag evaluations in local async storage. Upon reloading\nthe browser, an onChange event will be fired immediately with the local storage flags. The flow for this is as follows",
      "source_content_hash": "fc5f497cc2b05375bb990822eb4a748c99f3190302bdd0c30deb76c08e16fa24",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "若在`init`时设置`cacheFlags`为true，SDK会将功能开关评估结果缓存至本地异步存储中。当浏览器重新加载时，会立即触发携带本地存储开关状态的`onChange`事件。具体流程如下："
      }
    },
    {
      "segment_id": "014d2cea",
      "source_content": "1. `init` is called\n\n2. if `cacheFlags` is enabled, local storage checks for any stored flags and traits.\n\n3. if flags have been found in local storage, `onChange` is triggered with the stored flags.\n\n4. at the same time, fresh flags will be retrieved which will result in another `onChange` callback.\n\n5. whenever flags have been retrieved local storage will be updated.",
      "source_content_hash": "ad0b32f2600b67d09ced06f3caf04b9c239fcbd3740201f54d2fbf0a7649cb14",
      "node_type": "list",
      "translatable": true,
      "translations": {
        "zh-CN": "1. 调用`init`\n\n2. 若启用`cacheFlags`，则检查本地存储中是否存在缓存的开关和用户特征\n\n3. 若发现本地存储中存在开关，则立即用存储值触发`onChange`\n\n4. 同时会异步获取最新开关状态，获取成功后再次触发`onChange`回调\n\n5. 每次获取到新开关状态时都会更新本地存储"
      }
    },
    {
      "segment_id": "d6d64592",
      "source_content": "By default, these flags will be persisted indefinitely, you can clear this by removing `\"BULLET_TRAIN_DB\"` from\n`localStorage`.",
      "source_content_hash": "d201ecb67f41e4506dbb1951d8b9bd3c8794af3e32579a93d244a66bb2fa37ff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "默认情况下这些开关会永久保存，您可通过删除`localStorage`中的`\"BULLET_TRAIN_DB\"`来清除缓存。"
      }
    },
    {
      "segment_id": "50cd4f87",
      "source_content": "**Why am I seeing `ReferenceError: XMLHttpRequest is not defined`?**",
      "source_content_hash": "1ac182408bfea64e160ec60cfcaf0b17f311421c021330ac47d1fc9e7ac68d5c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "**为何会出现`ReferenceError: XMLHttpRequest未定义`错误？**"
      }
    },
    {
      "segment_id": "b575518d",
      "source_content": "The Flagsmith JavaScript client uses the [fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)\nAPI to handle REST calls. Some frameworks such as Manifest and Nuxt do not support this out of the box.",
      "source_content_hash": "d30a3184fcd9a868e8a30b65d76d8e87ae4916036f3c23f790819ea683e269f2",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "Flagsmith JavaScript客户端使用[fetch API](https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch)处理REST调用。某些框架（如Manifest和Nuxt）默认不支持此API。"
      }
    },
    {
      "segment_id": "bb16b416",
      "source_content": "In order to resolve this issue, you can provide a custom fetch implementation to the Flagsmith SDK. An example of this\ncan be found\n[here](https://github.com/Flagsmith/flagsmith-js-client/blob/main/examples/nuxt/plugins/flagsmith-plugin.ts#L9).",
      "source_content_hash": "d11058c5f9cbf852ded21ba480200ae3e437e4e16423e952874f66718f520301",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-CN": "解决方案是为Flagsmith SDK提供自定义fetch实现，示例代码可参考[此处](https://github.com/Flagsmith/flagsmith-js-client/blob/main/examples/nuxt/plugins/flagsmith-plugin.ts#L9)。"
      }
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/current/clients/client-side/javascript.md",
  "last_updated_timestamp": "2025-06-08T19:31:17.941750+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-CN": "f612d0fdd54b7d2595b758ee5bb53bc86155e373c645f624d2b4b0b9f7141e2a"
  }
}